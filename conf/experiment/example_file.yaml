# @package experiment
experiment_name: example_experiment

# Dataset related
sample_rate: 16000 # target sample rate #should be included in training cfg
source_sample_rate: 16000 # source sample rate, added to support BWE #should be included in training cfg
segment: 2
stride: 2    # in seconds, how much to stride between training examples
pad: true   # if training sample is too short, pad it
batch_size: 16

# models related
model: demucs # demucs/demucs_adversarial/demucs_hifi/demucs_hifi_features
demucs:
  chin: 1
  chout: 1
  hidden: 48
  max_hidden: 10000
  causal: true
  floor: 1e-3
  glu: true
  depth: 5
  kernel_size: 8
  stride: 2
  normalize: true
  resample: 1
  growth: 2
  rescale: 0.1
  scale_factor: 1

seanet:
  latent_space_size: 128
  ngf: 32
  n_residual_layers: 3
  resample: 1

caunet:
  L: 512
  width: 64
  frame_size: 512
  frame_shift: 256
  scale_factor: ${experiment.scale_factor}

hifi:
  resblock: 1
  upsample_rates: [8,8,2,2]
  upsample_kernel_sizes: [16,16,4,4]
  upsample_initial_channel: 128
  input_initial_channel: 1
  resblock_kernel_sizes: [3,7,11]
  resblock_dilation_sizes: [[1,3,5], [1,3,5], [1,3,5]]
  n_fft: 1024
  hop_size: 256
  win_size: 1024
  n_mels: 80
  with_spec: True
  l1_factor: 45
  gen_factor: 2

demucs2embedded:  # used in demucs_hifi for embedded dim creation. (also with asr conditioning)
  sample_rate: 16000 # dummy - alter this in batch_solver
  slice_rate: 20e-3
  ch_in: 128
  len_in: 256
  emb_dim: 768
  include_ft: true
  ft_reg_factor: 1e-2
  include_skip_connections: true
  dialation: 1

features_model:
  feature_model: 'hubert'
  state_dict_path: 'path/to/weights/' # TODO: fill
  features_factor: 0.01

# Discriminator related
adversarial_mode: False
laplacian: False
lambda_feat: 100
discriminator:
  n_layers: 4
  num_D: 3
  downsampling_factor: 4
  ndf: 16